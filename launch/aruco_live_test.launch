<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- args to be passed in -->
  <arg name="device" default="/dev/video0" />
  <arg name="show" default="true" />

  <node pkg="aruco_localization" type="aruco_localization" name="aruco" output="screen">
    <param name="show_output_video" value="$(arg show)" />
    <param name="markermap_config" value="$(find desktopquad_sim)/params/aruco_mip_36h12_markermap.yaml" />
    <param name="marker_size" value="0.0298" />

    <param name="debug_save_input_frames" value="false" />
    <param name="debug_save_output_frames" value="false" />
    <param name="debug_image_path" value="/tmp/arucoimages" />

    <remap from="input_image" to="chiny_cam/image_raw" />
    <remap from="output_image" to="aruco/image" />
  </node>

  <include file="$(find video_stream_opencv)/launch/camera.launch">
    <!-- node name and ros graph name -->
    <arg name="camera_name" value="chiny_cam" />
    <!-- means video device 0, /dev/video0 -->
    <arg name="video_stream_provider" value="0" />
    <!-- throttling the querying of frames to -->
    <arg name="fps" value="30" />
    <!-- setting frame_id -->
    <arg name="frame_id" value="chiny_cam" />
    <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
    "file:///$(find your_camera_package)/config/your_camera.yaml" -->
    <arg name="camera_info_url" value="file://$(find aruco_localization)/camera_info/chiny_cam.yaml" />
    <!-- flip the image horizontally (mirror it) -->
    <arg name="flip_horizontal" value="false" />
    <!-- flip the image vertically -->
    <arg name="flip_vertical" value="false" />
    <!-- visualize on an image_view window the stream generated -->
    <arg name="visualize" value="false" />
  </include>


<!--   <group if="$(arg show)">
    <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
      <remap from="image" to="/usb_cam/image_raw"/>
      <param name="autosize" value="true" />
    </node>
  </group> -->
</launch>
